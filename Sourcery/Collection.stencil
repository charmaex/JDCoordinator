{% for protocol in types.protocols where protocol.accessLevel == 'public' %}
{% for i in protocol.inheritedTypes where i == "AnyObject" or i == "RootNavigating" %}
public extension Collection where Element == {{protocol.name}} {
	/// Returns the index of the element in the collection.
	/// - parameter member: An element to look for in the collection.
	/// - returns: members index if member exists in the collection; otherwise, nil.
    func index(for member: Element) -> Index? {
        return index(where: { $0 === member })
    }
}

public extension Sequence where Element == {{protocol.name}} {
	/// Returns a Boolean value that indicates whether the given element exists in the sequence.
	/// - parameter member: An element to look for in the sequence.
	/// - returns: true if member exists in the sequence; otherwise, false.
    func contains(_ member: Element) -> Bool {
        return first(where: { $0 === member }) != nil
    }
}

{% endfor %}
{% endfor %}